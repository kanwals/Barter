/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */






import java.io.DataInputStream;
import java.io.DataOutputStream;
import java.io.IOException;
import java.net.Socket;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.table.AbstractTableModel;
import javax.swing.table.TableModel;

/**
 *
 * @author Gurkanwal
 */
class details{
    
    String ID;
    String name1;
    String name2;
    String land,technology,chemical,machinery,oil,electricity,plastic,metal,labour;
    String jet,medicine,fmcg,defense,car,clothes,mobile,ships,money;
}
public class team_details extends javax.swing.JFrame {
    Thread t;
    client obj;
    DataOutputStream dos;
    DataInputStream dis;
    int count;
    /**
     * Creates new form team_details
     */
    ArrayList<details> team;
    TableModel tm;
    public team_details() {
        team = new ArrayList<>();
        tm = new TableModel();
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTextField1 = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jLabel3 = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();
        jTextField2 = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jButton3 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Teams will be charged 30,000 for viewing their current details");

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel2.setText("ID");

        jButton1.setText("view");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jTable1.setModel(tm);
        jScrollPane1.setViewportView(jTable1);

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setText("TEAMS ARE REQUESTED TO TAKE A PHOTOGRAPH AND LEAVE");

        jButton2.setText("connect");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel4.setText("SERVER IP");

        jButton3.setText("clear table");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jButton1))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, 184, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jButton2)))
                .addContainerGap(383, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, 608, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane1)
                    .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton2)
                    .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 38, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel2))
                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(23, 23, 23)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 296, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        try {
            obj = new team_details.client();
            obj.server_ip=jTextField2.getText();
            t = new Thread(obj);
            t.start();
        }
        catch(Exception e){
            e.printStackTrace();
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        try {
            dos.writeBytes("VIEWER\r\n");
            } catch (Exception e) {
                JOptionPane.showMessageDialog(rootPane,"NOT CONNECTED");
        }
         
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        team.clear();
        tm.fireTableDataChanged();
    }//GEN-LAST:event_jButton3ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(team_details.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(team_details.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(team_details.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(team_details.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new team_details().setVisible(true);
            }
        });
    }
    public class TableModel extends AbstractTableModel {
        
        String title[] = {"ID","member1","member2","land","technology","chemical","machinery","oil","electricity","plastic","metal","labour","jet","medicine","fmcg","defense","car","clothes","mobile","ships","money"};
        
        public String getColumnName(int a) {
            return title[a];
        }
        
        public int getRowCount() {
            int n = team.size();
            return n;
        }
        
        public int getColumnCount() {
            return title.length;
        }
        
        public Object getValueAt(int i, int j) {
            details temp = team.get(i);
            if (j == 0) {
                return temp.ID;
            }
            
            if (j == 1) {
                return temp.name1;
            }
            if (j == 2) {
                return temp.name2;
            }
            if (j == 3) {
                return temp.land;
            }
            if (j == 4) {
                return temp.technology;
            }
            if (j == 5) {
                return temp.chemical;
            }
            if (j == 6) {
                return temp.machinery;
            }
            if (j == 7) {
                return temp.oil;
            }
            if (j == 8) {
                return temp.electricity;
            }
            if (j == 9) {
                return temp.plastic;
            }
            if (j == 10) {
                return temp.metal;
            }
            if (j == 11) {
                return temp.labour;
            }
            if (j == 12) {
                return temp.jet;
            }
            if (j == 13) {
                return temp.medicine;
            }
            if (j == 14) {
                return temp.fmcg;
            }
            if (j == 15) {
                return temp.defense;
            }
            if (j == 16) {
                return temp.car;
            }
            if (j == 17) {
                return temp.clothes;
            }
            if (j == 18) {
                return temp.mobile;
            }
            if (j == 19) {
                return temp.ships;
            }
            if (j == 20) {
                return temp.money;
            }
            return 0;
        }
        
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    // End of variables declaration//GEN-END:variables
    public class client implements Runnable {

        Socket s;
        String server_ip;
        client() throws IOException {

        }

        public void run() {
            try {
                
                boolean connected_flag = false;
                try{
                
                s = new Socket(server_ip, 9001);
                dis = new DataInputStream(s.getInputStream());
                dos = new DataOutputStream(s.getOutputStream());
                connected_flag=true;
                }
                catch(Exception ex){
                    ex.printStackTrace();
                    connected_flag=false;
                    JOptionPane.showMessageDialog(team_details.this,"Either: \n1)INVALID IP\n2)SERVER NOT RUNNING\n3)INTERNET DISCONNECTED","ERROR",JOptionPane.OK_OPTION);
                    jButton2.setEnabled(true);
                }
                if(connected_flag==true){
                JOptionPane.showMessageDialog(team_details.this,"Connected to server! :)");
                setTitle("THIS CLIENT's IP: "+s.getLocalAddress().getHostAddress());
                jButton2.setEnabled(false);
                dos.writeBytes("VIEWER\r\n");//for server's table
                }
                while (true) {
                    String ack = dis.readLine();
                    System.out.println(s);
                    if (ack.equals("OKV")) {
                        dos.writeBytes(jTextField1.getText()+"\r\n");
                        String check = dis.readLine();
                        if(check.equals("OK")){
                            details obj = new details();
                            obj.ID= dis.readLine();
                            obj.name1= dis.readLine();
                            obj.name2= dis.readLine();
                            obj.land= dis.readLine();
                            obj.technology= dis.readLine();
                            obj.chemical= dis.readLine();
                            obj.machinery= dis.readLine();
                            obj.oil= dis.readLine();
                            obj.electricity= dis.readLine();
                            obj.plastic= dis.readLine();
                            obj.metal= dis.readLine();
                            obj.labour= dis.readLine();
                            obj.jet= dis.readLine();
                            obj.medicine= dis.readLine();
                            obj.fmcg= dis.readLine();
                            obj.defense= dis.readLine();
                            obj.car= dis.readLine();
                            obj.clothes= dis.readLine();
                            obj.mobile= dis.readLine();
                            obj.ships= dis.readLine();
                            obj.money= dis.readLine();
                            String final_ack = dis.readLine();
                            if(final_ack.equals("done")){
                                team.add(obj);
                                tm.fireTableDataChanged();
                            }
                            
                        }
                        else if(check.equals("FUNDS")){
                             JOptionPane.showMessageDialog(rootPane, "NOT ENOUGH MONEY TO CHECK DETAILS");   
                        }
                        else if(check.equals("FORMAT")){
                            JOptionPane.showMessageDialog(rootPane, "WRONG INPUT. either:\n1. Text entered in numeric field.\n2. Any field left blank.\nTRY AGAIN.");
                        }
                        else if(check.equals("IID")){
                            JOptionPane.showMessageDialog(rootPane, "INVALID ID. TRY AGAIN");
                        }
                        else if(check.equals("ERROR")){
                            JOptionPane.showMessageDialog(rootPane, "Something's wrong. try again.");
                        }
//                        if(confirmation.equals("VC")){
//                            JOptionPane.showMessageDialog(rootPane,"successfully done. TEAM ID: "+team_id);
//                            
//                        }
//                        else{
//                            JOptionPane.showMessageDialog(rootPane,"UNSUCCESSFUL.");
//                        }    
                    }
                }
                
            } catch (Exception e) {
                e.printStackTrace();
            }
        }
    }
}
