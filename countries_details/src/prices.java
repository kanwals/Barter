
import java.io.DataInputStream;
import java.io.DataOutputStream;
import java.io.IOException;
import java.net.Socket;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.table.AbstractTableModel;
import javax.swing.table.TableModel;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author Gurkanwal
 */
class details{
    String country,land,technology,chemical,machinery,oil,electricity,plastic,metal,labour;
}
public class prices extends javax.swing.JFrame {
    ArrayList<details> a= new ArrayList<>();
    Thread t;
    client obj;
    DataOutputStream dos;
    DataInputStream dis;
    int count;
    
    TableModel tm= new TableModel();
    public prices() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton1 = new javax.swing.JButton();
        jTextField1 = new javax.swing.JTextField();
        jButton2 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jButton1.setText("REFRESH");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jTextField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField1ActionPerformed(evt);
            }
        });

        jButton2.setText("CONNECT");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("COUNTRY WISE PRICE LIST");

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel2.setText("SERVER IP");

        jTable1.setModel(tm);
        jScrollPane1.setViewportView(jTable1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 182, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 991, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(20, 20, 20)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jTextField1)
                    .addComponent(jButton2, javax.swing.GroupLayout.DEFAULT_SIZE, 34, Short.MAX_VALUE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 223, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        try {
            dos.writeBytes("COUNTRIES\r\n");
            } catch (Exception e) {
                JOptionPane.showMessageDialog(rootPane,"NOT CONNECTED. RESTART APPLICATION AND CONNECT AGAIN.");
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        try {
            obj = new prices.client();
            obj.server_ip=jTextField1.getText();
            t = new Thread(obj);
            t.start();
        }
        catch(Exception e){
            e.printStackTrace();
        }
        
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jTextField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(prices.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(prices.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(prices.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(prices.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new prices().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField jTextField1;
    // End of variables declaration//GEN-END:variables
    public class TableModel extends AbstractTableModel {
        
        String title[] = {"COUNTRY","land","technology","chemical","machinery","oil","electricity","plastic","metal","labour"};
        
        public String getColumnName(int a) {
            return title[a];
        }
        
        public int getRowCount() {
            return a.size();
        }
        
        public int getColumnCount() {
            return title.length;
        }
        
        public Object getValueAt(int i, int j) {
            details temp = a.get(i);
            if (j == 0) {
                return temp.country;
            }
            
            if (j == 1) {
                return temp.land;
            }
            if (j == 2) {
                return temp.technology;
            }
            if (j == 3) {
                return temp.chemical;
            }
            if (j == 4) {
                return temp.machinery;
            }
            if (j == 5) {
                return temp.oil;
            }
            if (j == 6) {
                return temp.electricity;
            }
            if (j == 7) {
                return temp.plastic;
            }
            if (j == 8) {
                return temp.metal;
            }
            if (j == 9) {
                return temp.labour;
            }
            return 0;
        }
        
    }
    public class client implements Runnable {

        Socket s;
        String server_ip;
        client() throws IOException {

        }

        public void run() {
            try {
                
                boolean connected_flag = false;
                try{
                
                s = new Socket(server_ip, 9001);
                dis = new DataInputStream(s.getInputStream());
                dos = new DataOutputStream(s.getOutputStream());
                connected_flag=true;
                }
                catch(Exception ex){
                    ex.printStackTrace();
                    connected_flag=false;
                    JOptionPane.showMessageDialog(prices.this,"Either: \n1)INVALID IP\n2)SERVER NOT RUNNING\n3)INTERNET DISCONNECTED","ERROR",JOptionPane.OK_OPTION);
                    jButton1.setEnabled(true);
                }
                if(connected_flag==true){
                JOptionPane.showMessageDialog(prices.this,"Connected to server! :)");
                setTitle("PRICE VIEWER's IP: "+s.getLocalAddress().getHostAddress());
                jButton2.setEnabled(false);
                dos.writeBytes("COUNTRIES DETAILS\r\n");//for server's table
                }
                while (true) {
                    String ack = dis.readLine();
                    System.out.println(s);
                    if (ack.equals("OKD")) {
                        a.clear();
                        for(int i =0;i<9;i++){
                        details obj=new details();
                        obj.country=dis.readLine();
                        obj.land=dis.readLine();
                        obj.technology=dis.readLine();
                        obj.chemical=dis.readLine();
                        obj.machinery=dis.readLine();
                        obj.oil=dis.readLine();
                        obj.electricity=dis.readLine();
                        obj.plastic=dis.readLine();
                        obj.metal=dis.readLine();
                        obj.labour=dis.readLine();
                        a.add(obj);
                        tm.fireTableDataChanged();
                        }
                        tm.fireTableDataChanged();
                        JOptionPane.showMessageDialog(rootPane,"PRICES UPDATED SUCCESSFULLY");
                        }
                        else{
                            JOptionPane.showMessageDialog(rootPane,"UNSUCCESSFUL.");
                        }    
                    }
                }                
            catch (Exception e) {
                e.printStackTrace();
            }
        }
    }
}
